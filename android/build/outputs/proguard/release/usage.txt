com.ads.puzzle.fifa.Answer:
    public static final int GATE_MAX
    public static final int GRADE_1
    public static final int GRADE_2
    public static final int GRADE_3
    public static final int GRADE_4
    9:9:public Answer()
com.ads.puzzle.fifa.Assets:
    private static final int LEVELNUM
    30:30:public Assets()
    194:195:public static void playSound(com.badlogic.gdx.audio.Sound)
com.ads.puzzle.fifa.Settings:
    19:19:public Settings()
com.ads.puzzle.fifa.actors.AnimationPiece
com.ads.puzzle.fifa.actors.Area:
    94:95:public void setId(int)
com.ads.puzzle.fifa.actors.Gate:
    26:26:public int getId()
com.ads.puzzle.fifa.actors.Help
com.ads.puzzle.fifa.android.ActionResolver
com.ads.puzzle.fifa.android.BuildConfig
com.ads.puzzle.fifa.android.R:
    10:77:public R()
com.ads.puzzle.fifa.controller.IController:
    public static final java.lang.String AREA_CTRL
    public static final java.lang.String CHALLENGE_CTRL
    public static final java.lang.String PIECE_CTRL
    public static final java.lang.String SMALLPIECE_CTRL
    public abstract void handler()
com.ads.puzzle.fifa.test.JsonTest
com.ads.puzzle.fifa.test.ParticleTest
com.ads.puzzle.fifa.test.ParticleTest$1
com.esotericsoftware.tablelayout.BaseTableLayout$Debug:
    44:44:public static com.esotericsoftware.tablelayout.BaseTableLayout$Debug[] values()
    44:44:public static com.esotericsoftware.tablelayout.BaseTableLayout$Debug valueOf(java.lang.String)
com.esotericsoftware.tablelayout.Cell:
    129:129:public boolean hasWidget()
    134:140:public com.esotericsoftware.tablelayout.Cell size(com.esotericsoftware.tablelayout.Value)
    145:151:public com.esotericsoftware.tablelayout.Cell size(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    156:157:public com.esotericsoftware.tablelayout.Cell size(float)
    162:163:public com.esotericsoftware.tablelayout.Cell size(float,float)
    168:171:public com.esotericsoftware.tablelayout.Cell width(com.esotericsoftware.tablelayout.Value)
    176:177:public com.esotericsoftware.tablelayout.Cell width(float)
    182:185:public com.esotericsoftware.tablelayout.Cell height(com.esotericsoftware.tablelayout.Value)
    190:191:public com.esotericsoftware.tablelayout.Cell height(float)
    196:198:public com.esotericsoftware.tablelayout.Cell minSize(com.esotericsoftware.tablelayout.Value)
    203:205:public com.esotericsoftware.tablelayout.Cell minSize(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    209:210:public com.esotericsoftware.tablelayout.Cell minWidth(com.esotericsoftware.tablelayout.Value)
    214:215:public com.esotericsoftware.tablelayout.Cell minHeight(com.esotericsoftware.tablelayout.Value)
    220:222:public com.esotericsoftware.tablelayout.Cell minSize(float)
    227:229:public com.esotericsoftware.tablelayout.Cell minSize(float,float)
    233:234:public com.esotericsoftware.tablelayout.Cell minWidth(float)
    238:239:public com.esotericsoftware.tablelayout.Cell minHeight(float)
    244:246:public com.esotericsoftware.tablelayout.Cell prefSize(com.esotericsoftware.tablelayout.Value)
    251:253:public com.esotericsoftware.tablelayout.Cell prefSize(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    257:258:public com.esotericsoftware.tablelayout.Cell prefWidth(com.esotericsoftware.tablelayout.Value)
    262:263:public com.esotericsoftware.tablelayout.Cell prefHeight(com.esotericsoftware.tablelayout.Value)
    268:270:public com.esotericsoftware.tablelayout.Cell prefSize(float,float)
    275:277:public com.esotericsoftware.tablelayout.Cell prefSize(float)
    281:282:public com.esotericsoftware.tablelayout.Cell prefWidth(float)
    286:287:public com.esotericsoftware.tablelayout.Cell prefHeight(float)
    292:294:public com.esotericsoftware.tablelayout.Cell maxSize(com.esotericsoftware.tablelayout.Value)
    299:301:public com.esotericsoftware.tablelayout.Cell maxSize(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    305:306:public com.esotericsoftware.tablelayout.Cell maxWidth(com.esotericsoftware.tablelayout.Value)
    310:311:public com.esotericsoftware.tablelayout.Cell maxHeight(com.esotericsoftware.tablelayout.Value)
    316:318:public com.esotericsoftware.tablelayout.Cell maxSize(float)
    323:325:public com.esotericsoftware.tablelayout.Cell maxSize(float,float)
    329:330:public com.esotericsoftware.tablelayout.Cell maxWidth(float)
    334:335:public com.esotericsoftware.tablelayout.Cell maxHeight(float)
    340:344:public com.esotericsoftware.tablelayout.Cell space(com.esotericsoftware.tablelayout.Value)
    348:352:public com.esotericsoftware.tablelayout.Cell space(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    356:357:public com.esotericsoftware.tablelayout.Cell spaceTop(com.esotericsoftware.tablelayout.Value)
    361:362:public com.esotericsoftware.tablelayout.Cell spaceLeft(com.esotericsoftware.tablelayout.Value)
    366:367:public com.esotericsoftware.tablelayout.Cell spaceBottom(com.esotericsoftware.tablelayout.Value)
    371:372:public com.esotericsoftware.tablelayout.Cell spaceRight(com.esotericsoftware.tablelayout.Value)
    387:395:public com.esotericsoftware.tablelayout.Cell space(float,float,float,float)
    399:401:public com.esotericsoftware.tablelayout.Cell spaceTop(float)
    405:407:public com.esotericsoftware.tablelayout.Cell spaceLeft(float)
    411:413:public com.esotericsoftware.tablelayout.Cell spaceBottom(float)
    417:419:public com.esotericsoftware.tablelayout.Cell spaceRight(float)
    424:428:public com.esotericsoftware.tablelayout.Cell pad(com.esotericsoftware.tablelayout.Value)
    432:436:public com.esotericsoftware.tablelayout.Cell pad(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    440:441:public com.esotericsoftware.tablelayout.Cell padTop(com.esotericsoftware.tablelayout.Value)
    445:446:public com.esotericsoftware.tablelayout.Cell padLeft(com.esotericsoftware.tablelayout.Value)
    450:451:public com.esotericsoftware.tablelayout.Cell padBottom(com.esotericsoftware.tablelayout.Value)
    455:456:public com.esotericsoftware.tablelayout.Cell padRight(com.esotericsoftware.tablelayout.Value)
    461:466:public com.esotericsoftware.tablelayout.Cell pad(float)
    470:474:public com.esotericsoftware.tablelayout.Cell pad(float,float,float,float)
    478:479:public com.esotericsoftware.tablelayout.Cell padTop(float)
    483:484:public com.esotericsoftware.tablelayout.Cell padLeft(float)
    488:489:public com.esotericsoftware.tablelayout.Cell padBottom(float)
    493:494:public com.esotericsoftware.tablelayout.Cell padRight(float)
    506:507:public com.esotericsoftware.tablelayout.Cell fillX()
    512:513:public com.esotericsoftware.tablelayout.Cell fillY()
    517:519:public com.esotericsoftware.tablelayout.Cell fill(java.lang.Float,java.lang.Float)
    524:526:public com.esotericsoftware.tablelayout.Cell fill(boolean,boolean)
    531:533:public com.esotericsoftware.tablelayout.Cell fill(boolean)
    539:540:public com.esotericsoftware.tablelayout.Cell align(java.lang.Integer)
    545:546:public com.esotericsoftware.tablelayout.Cell center()
    551:557:public com.esotericsoftware.tablelayout.Cell top()
    562:568:public com.esotericsoftware.tablelayout.Cell left()
    573:579:public com.esotericsoftware.tablelayout.Cell bottom()
    584:590:public com.esotericsoftware.tablelayout.Cell right()
    602:603:public com.esotericsoftware.tablelayout.Cell expandX()
    608:609:public com.esotericsoftware.tablelayout.Cell expandY()
    613:615:public com.esotericsoftware.tablelayout.Cell expand(java.lang.Integer,java.lang.Integer)
    620:622:public com.esotericsoftware.tablelayout.Cell expand(boolean,boolean)
    626:627:public com.esotericsoftware.tablelayout.Cell ignore(java.lang.Boolean)
    632:633:public com.esotericsoftware.tablelayout.Cell ignore()
    641:642:public com.esotericsoftware.tablelayout.Cell colspan(java.lang.Integer)
    647:649:public com.esotericsoftware.tablelayout.Cell uniform()
    654:655:public com.esotericsoftware.tablelayout.Cell uniformX()
    660:661:public com.esotericsoftware.tablelayout.Cell uniformY()
    665:667:public com.esotericsoftware.tablelayout.Cell uniform(java.lang.Boolean,java.lang.Boolean)
    682:683:public void setWidgetX(float)
    698:699:public void setWidgetWidth(float)
    706:707:public void setWidgetHeight(float)
    710:710:public int getColumn()
    714:714:public int getRow()
    719:719:public com.esotericsoftware.tablelayout.Value getMinWidthValue()
    723:723:public float getMinWidth()
    728:728:public com.esotericsoftware.tablelayout.Value getMinHeightValue()
    732:732:public float getMinHeight()
    737:737:public com.esotericsoftware.tablelayout.Value getPrefWidthValue()
    741:741:public float getPrefWidth()
    746:746:public com.esotericsoftware.tablelayout.Value getPrefHeightValue()
    750:750:public float getPrefHeight()
    755:755:public com.esotericsoftware.tablelayout.Value getMaxWidthValue()
    759:759:public float getMaxWidth()
    764:764:public com.esotericsoftware.tablelayout.Value getMaxHeightValue()
    768:768:public float getMaxHeight()
    773:773:public com.esotericsoftware.tablelayout.Value getSpaceTopValue()
    777:777:public float getSpaceTop()
    782:782:public com.esotericsoftware.tablelayout.Value getSpaceLeftValue()
    786:786:public float getSpaceLeft()
    791:791:public com.esotericsoftware.tablelayout.Value getSpaceBottomValue()
    795:795:public float getSpaceBottom()
    800:800:public com.esotericsoftware.tablelayout.Value getSpaceRightValue()
    804:804:public float getSpaceRight()
    809:809:public com.esotericsoftware.tablelayout.Value getPadTopValue()
    813:813:public float getPadTop()
    818:818:public com.esotericsoftware.tablelayout.Value getPadLeftValue()
    822:822:public float getPadLeft()
    827:827:public com.esotericsoftware.tablelayout.Value getPadBottomValue()
    831:831:public float getPadBottom()
    836:836:public com.esotericsoftware.tablelayout.Value getPadRightValue()
    840:840:public float getPadRight()
    845:845:public java.lang.Float getFillX()
    850:850:public java.lang.Float getFillY()
    855:855:public java.lang.Integer getAlign()
    860:860:public java.lang.Integer getExpandX()
    865:865:public java.lang.Integer getExpandY()
    870:870:public java.lang.Integer getColspan()
    875:875:public java.lang.Boolean getUniformX()
    880:880:public java.lang.Boolean getUniformY()
    885:885:public boolean isEndRow()
    890:890:public float getComputedPadTop()
    895:895:public float getComputedPadLeft()
    900:900:public float getComputedPadBottom()
    905:905:public float getComputedPadRight()
    909:909:public com.esotericsoftware.tablelayout.Cell row()
    913:913:public com.esotericsoftware.tablelayout.BaseTableLayout getLayout()
com.esotericsoftware.tablelayout.Value:
    172:172:public static com.esotericsoftware.tablelayout.Value percentWidth(float)
    181:181:public static com.esotericsoftware.tablelayout.Value percentHeight(float)
    190:190:public static com.esotericsoftware.tablelayout.Value percentWidth(float,java.lang.Object)
    203:203:public static com.esotericsoftware.tablelayout.Value percentHeight(float,java.lang.Object)
com.esotericsoftware.tablelayout.Value$10
com.esotericsoftware.tablelayout.Value$11
com.esotericsoftware.tablelayout.Value$8
com.esotericsoftware.tablelayout.Value$9
com.esotericsoftware.tablelayout.Value$FixedValue:
    98:99:public void set(float)
com.esotericsoftware.tablelayout.Value$TableValue
japa.parser.ASTHelper
japa.parser.ASTParser:
    9790:9791:public ASTParser(java.io.InputStream)
    9814:9815:public void ReInit(java.io.InputStream)
    9735:9998:public ASTParser(java.io.Reader)
    9853:9864:public void ReInit(java.io.Reader)
    9735:9998:public ASTParser(japa.parser.ASTParserTokenManager)
    9882:9892:public void ReInit(japa.parser.ASTParserTokenManager)
    9961:9968:public final japa.parser.Token getNextToken()
    10079:10079:public final void enable_tracing()
    10083:10083:public final void disable_tracing()
japa.parser.ASTParserConstants:
    public static final int EOF
    public static final int SINGLE_LINE_COMMENT
    public static final int JAVA_DOC_COMMENT
    public static final int MULTI_LINE_COMMENT
    public static final int ABSTRACT
    public static final int ASSERT
    public static final int BOOLEAN
    public static final int BREAK
    public static final int BYTE
    public static final int CASE
    public static final int CATCH
    public static final int CHAR
    public static final int CLASS
    public static final int CONST
    public static final int CONTINUE
    public static final int _DEFAULT
    public static final int DO
    public static final int DOUBLE
    public static final int ELSE
    public static final int ENUM
    public static final int EXTENDS
    public static final int FALSE
    public static final int FINAL
    public static final int FINALLY
    public static final int FLOAT
    public static final int FOR
    public static final int GOTO
    public static final int IF
    public static final int IMPLEMENTS
    public static final int IMPORT
    public static final int INSTANCEOF
    public static final int INT
    public static final int INTERFACE
    public static final int LONG
    public static final int NATIVE
    public static final int NEW
    public static final int NULL
    public static final int PACKAGE
    public static final int PRIVATE
    public static final int PROTECTED
    public static final int PUBLIC
    public static final int RETURN
    public static final int SHORT
    public static final int STATIC
    public static final int STRICTFP
    public static final int SUPER
    public static final int SWITCH
    public static final int SYNCHRONIZED
    public static final int THIS
    public static final int THROW
    public static final int THROWS
    public static final int TRANSIENT
    public static final int TRUE
    public static final int TRY
    public static final int VOID
    public static final int VOLATILE
    public static final int WHILE
    public static final int LONG_LITERAL
    public static final int INTEGER_LITERAL
    public static final int DECIMAL_LITERAL
    public static final int HEX_LITERAL
    public static final int OCTAL_LITERAL
    public static final int FLOATING_POINT_LITERAL
    public static final int DECIMAL_FLOATING_POINT_LITERAL
    public static final int DECIMAL_EXPONENT
    public static final int HEXADECIMAL_FLOATING_POINT_LITERAL
    public static final int HEXADECIMAL_EXPONENT
    public static final int CHARACTER_LITERAL
    public static final int STRING_LITERAL
    public static final int IDENTIFIER
    public static final int LETTER
    public static final int PART_LETTER
    public static final int LPAREN
    public static final int RPAREN
    public static final int LBRACE
    public static final int RBRACE
    public static final int LBRACKET
    public static final int RBRACKET
    public static final int SEMICOLON
    public static final int COMMA
    public static final int DOT
    public static final int AT
    public static final int ASSIGN
    public static final int LT
    public static final int BANG
    public static final int TILDE
    public static final int HOOK
    public static final int COLON
    public static final int EQ
    public static final int LE
    public static final int GE
    public static final int NE
    public static final int SC_OR
    public static final int SC_AND
    public static final int INCR
    public static final int DECR
    public static final int PLUS
    public static final int MINUS
    public static final int STAR
    public static final int SLASH
    public static final int BIT_AND
    public static final int BIT_OR
    public static final int XOR
    public static final int REM
    public static final int LSHIFT
    public static final int PLUSASSIGN
    public static final int MINUSASSIGN
    public static final int STARASSIGN
    public static final int SLASHASSIGN
    public static final int ANDASSIGN
    public static final int ORASSIGN
    public static final int XORASSIGN
    public static final int REMASSIGN
    public static final int LSHIFTASSIGN
    public static final int RSIGNEDSHIFTASSIGN
    public static final int RUNSIGNEDSHIFTASSIGN
    public static final int ELLIPSIS
    public static final int RUNSIGNEDSHIFT
    public static final int RSIGNEDSHIFT
    public static final int GT
    public static final int DEFAULT
    public static final int IN_JAVA_DOC_COMMENT
    public static final int IN_MULTI_LINE_COMMENT
japa.parser.ASTParserTokenManager:
    77:77:public void setDebugStream(java.io.PrintStream)
    2057:2059:public ASTParserTokenManager(japa.parser.JavaCharStream,int)
    2080:2082:public void ReInit(japa.parser.JavaCharStream,int)
    2087:2091:public void SwitchTo(int)
japa.parser.JavaCharStream:
    public static final boolean staticFlag
    102:102:protected void setTabSize(int)
    103:103:protected int getTabSize(int)
    372:372:public int getColumn()
    381:381:public int getLine()
    431:432:public JavaCharStream(java.io.Reader,int,int)
    437:438:public JavaCharStream(java.io.Reader)
    464:465:public void ReInit(java.io.Reader,int,int)
    470:471:public void ReInit(java.io.Reader)
    483:484:public JavaCharStream(java.io.InputStream,int,int,int)
    497:498:public JavaCharStream(java.io.InputStream,int,int)
    503:504:public JavaCharStream(java.io.InputStream,java.lang.String)
    509:510:public JavaCharStream(java.io.InputStream)
    523:524:public void ReInit(java.io.InputStream,int,int,int)
    535:536:public void ReInit(java.io.InputStream,int,int)
    540:541:public void ReInit(java.io.InputStream,java.lang.String)
    546:547:public void ReInit(java.io.InputStream)
    579:583:public void Done()
    590:631:public void adjustBeginLineColumn(int,int)
japa.parser.JavaParser:
    46:48:private JavaParser()
    60:64:public static void setCacheParser(boolean)
    107:112:public static japa.parser.ast.CompilationUnit parse(java.io.File,java.lang.String)
    124:124:public static japa.parser.ast.CompilationUnit parse(java.io.File)
japa.parser.Token:
    83:83:public java.lang.Object getValue()
    96:97:public Token(int)
    102:106:public Token(int,java.lang.String)
    132:132:public static japa.parser.Token newToken(int,java.lang.String)
    138:138:public static japa.parser.Token newToken(int)
japa.parser.TokenMgrError:
    static final int LEXICAL_ERROR
    static final int STATIC_LEXER_ERROR
    static final int INVALID_LEXICAL_STATE
    static final int LOOP_DETECTED
japa.parser.ast.BlockComment:
    42:43:public BlockComment(java.lang.String)
japa.parser.ast.Comment:
    41:43:public Comment(java.lang.String)
    66:67:public void setContent(java.lang.String)
japa.parser.ast.CompilationUnit:
    70:75:public CompilationUnit(japa.parser.ast.PackageDeclaration,java.util.List,java.util.List,java.util.List)
    153:154:public void setComments(java.util.List)
    164:165:public void setImports(java.util.List)
    175:176:public void setPackage(japa.parser.ast.PackageDeclaration)
    185:186:public void setTypes(java.util.List)
japa.parser.ast.ImportDeclaration:
    59:63:public ImportDeclaration(japa.parser.ast.expr.NameExpr,boolean,boolean)
    118:119:public void setAsterisk(boolean)
    128:129:public void setName(japa.parser.ast.expr.NameExpr)
    138:139:public void setStatic(boolean)
japa.parser.ast.LineComment:
    41:42:public LineComment(java.lang.String)
japa.parser.ast.Node:
    private java.lang.Object data
    108:108:public final java.lang.Object getData()
    117:117:public final int getEndColumn()
    136:137:public final void setBeginColumn(int)
    146:147:public final void setBeginLine(int)
    153:154:public final void setData(java.lang.Object)
    163:164:public final void setEndColumn(int)
    173:174:public final void setEndLine(int)
japa.parser.ast.PackageDeclaration:
    60:62:public PackageDeclaration(japa.parser.ast.expr.NameExpr)
    64:67:public PackageDeclaration(java.util.List,japa.parser.ast.expr.NameExpr)
    109:110:public void setAnnotations(java.util.List)
    119:120:public void setName(japa.parser.ast.expr.NameExpr)
japa.parser.ast.TypeParameter:
    58:61:public TypeParameter(java.lang.String,java.util.List)
    105:106:public void setName(java.lang.String)
    115:116:public void setTypeBound(java.util.List)
japa.parser.ast.body.AnnotationDeclaration:
    39:40:public AnnotationDeclaration(int,java.lang.String)
    43:44:public AnnotationDeclaration(japa.parser.ast.body.JavadocComment,int,java.util.List,java.lang.String,java.util.List)
japa.parser.ast.body.AnnotationMemberDeclaration:
    48:53:public AnnotationMemberDeclaration(int,japa.parser.ast.type.Type,java.lang.String,japa.parser.ast.expr.Expression)
    56:61:public AnnotationMemberDeclaration(japa.parser.ast.body.JavadocComment,int,java.util.List,japa.parser.ast.type.Type,java.lang.String,japa.parser.ast.expr.Expression)
    104:105:public void setDefaultValue(japa.parser.ast.expr.Expression)
    108:109:public void setModifiers(int)
    112:113:public void setName(java.lang.String)
    116:117:public void setType(japa.parser.ast.type.Type)
japa.parser.ast.body.BodyDeclaration:
    41:44:public BodyDeclaration(java.util.List,japa.parser.ast.body.JavadocComment)
    61:62:public final void setJavaDoc(japa.parser.ast.body.JavadocComment)
    65:66:public final void setAnnotations(java.util.List)
japa.parser.ast.body.ClassOrInterfaceDeclaration:
    49:51:public ClassOrInterfaceDeclaration(int,boolean,java.lang.String)
    54:59:public ClassOrInterfaceDeclaration(japa.parser.ast.body.JavadocComment,int,java.util.List,boolean,java.lang.String,java.util.List,java.util.List,java.util.List,java.util.List)
    96:97:public void setExtends(java.util.List)
    100:101:public void setImplements(java.util.List)
    104:105:public void setInterface(boolean)
    108:109:public void setTypeParameters(java.util.List)
japa.parser.ast.body.ConstructorDeclaration:
    53:56:public ConstructorDeclaration(int,java.lang.String)
    59:66:public ConstructorDeclaration(japa.parser.ast.body.JavadocComment,int,java.util.List,java.util.List,java.lang.String,java.util.List,java.util.List,japa.parser.ast.stmt.BlockStmt)
    119:120:public void setBlock(japa.parser.ast.stmt.BlockStmt)
    123:124:public void setModifiers(int)
    127:128:public void setName(java.lang.String)
    131:132:public void setParameters(java.util.List)
    135:136:public void setThrows(java.util.List)
    139:140:public void setTypeParameters(java.util.List)
japa.parser.ast.body.EmptyMemberDeclaration:
    36:37:public EmptyMemberDeclaration(japa.parser.ast.body.JavadocComment)
japa.parser.ast.body.EmptyTypeDeclaration:
    36:37:public EmptyTypeDeclaration(japa.parser.ast.body.JavadocComment)
japa.parser.ast.body.EnumConstantDeclaration:
    45:47:public EnumConstantDeclaration(java.lang.String)
    50:54:public EnumConstantDeclaration(japa.parser.ast.body.JavadocComment,java.util.List,java.lang.String,java.util.List,java.util.List)
    86:87:public void setArgs(java.util.List)
    90:91:public void setClassBody(java.util.List)
    94:95:public void setName(java.lang.String)
japa.parser.ast.body.EnumDeclaration:
    44:45:public EnumDeclaration(int,java.lang.String)
    48:51:public EnumDeclaration(japa.parser.ast.body.JavadocComment,int,java.util.List,java.lang.String,java.util.List,java.util.List,java.util.List)
    78:79:public void setEntries(java.util.List)
    82:83:public void setImplements(java.util.List)
japa.parser.ast.body.FieldDeclaration:
    46:51:public FieldDeclaration(int,japa.parser.ast.type.Type,japa.parser.ast.body.VariableDeclarator)
    53:57:public FieldDeclaration(int,japa.parser.ast.type.Type,java.util.List)
    60:64:public FieldDeclaration(japa.parser.ast.body.JavadocComment,int,java.util.List,japa.parser.ast.type.Type,java.util.List)
    102:103:public void setModifiers(int)
    106:107:public void setType(japa.parser.ast.type.Type)
    110:111:public void setVariables(java.util.List)
japa.parser.ast.body.InitializerDeclaration:
    40:43:public InitializerDeclaration(boolean,japa.parser.ast.stmt.BlockStmt)
    46:49:public InitializerDeclaration(japa.parser.ast.body.JavadocComment,boolean,japa.parser.ast.stmt.BlockStmt)
    76:77:public void setBlock(japa.parser.ast.stmt.BlockStmt)
    80:81:public void setStatic(boolean)
japa.parser.ast.body.JavadocComment:
    37:38:public JavadocComment(java.lang.String)
japa.parser.ast.body.MethodDeclaration:
    58:62:public MethodDeclaration(int,japa.parser.ast.type.Type,java.lang.String)
    64:69:public MethodDeclaration(int,japa.parser.ast.type.Type,java.lang.String,java.util.List)
    72:81:public MethodDeclaration(japa.parser.ast.body.JavadocComment,int,java.util.List,java.util.List,japa.parser.ast.type.Type,java.lang.String,java.util.List,int,java.util.List,japa.parser.ast.stmt.BlockStmt)
    144:145:public void setArrayCount(int)
    148:149:public void setBody(japa.parser.ast.stmt.BlockStmt)
    152:153:public void setModifiers(int)
    156:157:public void setName(java.lang.String)
    160:161:public void setParameters(java.util.List)
    164:165:public void setThrows(java.util.List)
    168:169:public void setType(japa.parser.ast.type.Type)
    172:173:public void setTypeParameters(java.util.List)
japa.parser.ast.body.ModifierSet:
    public static final int PUBLIC
    public static final int PRIVATE
    public static final int PROTECTED
    public static final int STATIC
    public static final int FINAL
    public static final int SYNCHRONIZED
    public static final int VOLATILE
    public static final int TRANSIENT
    public static final int NATIVE
    public static final int ABSTRACT
    public static final int STRICTFP
    118:118:public static int removeModifier(int,int)
    121:122:private ModifierSet()
japa.parser.ast.body.Parameter:
    50:53:public Parameter(japa.parser.ast.type.Type,japa.parser.ast.body.VariableDeclaratorId)
    55:59:public Parameter(int,japa.parser.ast.type.Type,japa.parser.ast.body.VariableDeclaratorId)
    107:108:public void setAnnotations(java.util.List)
    111:112:public void setId(japa.parser.ast.body.VariableDeclaratorId)
    115:116:public void setModifiers(int)
    119:120:public void setType(japa.parser.ast.type.Type)
    123:124:public void setVarArgs(boolean)
japa.parser.ast.body.TypeDeclaration:
    42:45:public TypeDeclaration(int,java.lang.String)
    48:52:public TypeDeclaration(java.util.List,japa.parser.ast.body.JavadocComment,int,java.lang.String,java.util.List)
    80:81:public void setMembers(java.util.List)
    84:85:public final void setModifiers(int)
    88:89:public final void setName(java.lang.String)
japa.parser.ast.body.VariableDeclarator:
    41:43:public VariableDeclarator(japa.parser.ast.body.VariableDeclaratorId)
    45:48:public VariableDeclarator(japa.parser.ast.body.VariableDeclaratorId,japa.parser.ast.expr.Expression)
    75:76:public void setId(japa.parser.ast.body.VariableDeclaratorId)
    79:80:public void setInit(japa.parser.ast.expr.Expression)
japa.parser.ast.body.VariableDeclaratorId:
    40:42:public VariableDeclaratorId(java.lang.String)
    69:70:public void setArrayCount(int)
    73:74:public void setName(java.lang.String)
japa.parser.ast.expr.AnnotationExpr:
    43:44:public void setName(japa.parser.ast.expr.NameExpr)
japa.parser.ast.expr.ArrayAccessExpr:
    39:42:public ArrayAccessExpr(japa.parser.ast.expr.Expression,japa.parser.ast.expr.Expression)
    69:70:public void setIndex(japa.parser.ast.expr.Expression)
    73:74:public void setName(japa.parser.ast.expr.Expression)
japa.parser.ast.expr.ArrayCreationExpr:
    46:51:public ArrayCreationExpr(japa.parser.ast.type.Type,int,japa.parser.ast.expr.ArrayInitializerExpr)
    61:66:public ArrayCreationExpr(japa.parser.ast.type.Type,java.util.List,int)
    103:104:public void setArrayCount(int)
    107:108:public void setDimensions(java.util.List)
    111:112:public void setInitializer(japa.parser.ast.expr.ArrayInitializerExpr)
    115:116:public void setType(japa.parser.ast.type.Type)
japa.parser.ast.expr.ArrayInitializerExpr:
    39:41:public ArrayInitializerExpr(java.util.List)
    63:64:public void setValues(java.util.List)
japa.parser.ast.expr.AssignExpr:
    56:60:public AssignExpr(japa.parser.ast.expr.Expression,japa.parser.ast.expr.Expression,japa.parser.ast.expr.AssignExpr$Operator)
    92:93:public void setOperator(japa.parser.ast.expr.AssignExpr$Operator)
    96:97:public void setTarget(japa.parser.ast.expr.Expression)
    100:101:public void setValue(japa.parser.ast.expr.Expression)
japa.parser.ast.expr.AssignExpr$Operator:
    1:1:public static japa.parser.ast.expr.AssignExpr$Operator valueOf(java.lang.String)
japa.parser.ast.expr.BinaryExpr:
    63:67:public BinaryExpr(japa.parser.ast.expr.Expression,japa.parser.ast.expr.Expression,japa.parser.ast.expr.BinaryExpr$Operator)
    99:100:public void setLeft(japa.parser.ast.expr.Expression)
    103:104:public void setOperator(japa.parser.ast.expr.BinaryExpr$Operator)
    107:108:public void setRight(japa.parser.ast.expr.Expression)
japa.parser.ast.expr.BinaryExpr$Operator:
    1:1:public static japa.parser.ast.expr.BinaryExpr$Operator valueOf(java.lang.String)
japa.parser.ast.expr.BooleanLiteralExpr:
    37:39:public BooleanLiteralExpr(boolean)
    61:62:public void setValue(boolean)
japa.parser.ast.expr.CastExpr:
    40:43:public CastExpr(japa.parser.ast.type.Type,japa.parser.ast.expr.Expression)
    70:71:public void setExpr(japa.parser.ast.expr.Expression)
    74:75:public void setType(japa.parser.ast.type.Type)
japa.parser.ast.expr.CharLiteralExpr:
    36:37:public CharLiteralExpr(java.lang.String)
japa.parser.ast.expr.ClassExpr:
    38:40:public ClassExpr(japa.parser.ast.type.Type)
    62:63:public void setType(japa.parser.ast.type.Type)
japa.parser.ast.expr.ConditionalExpr:
    41:45:public ConditionalExpr(japa.parser.ast.expr.Expression,japa.parser.ast.expr.Expression,japa.parser.ast.expr.Expression)
    77:78:public void setCondition(japa.parser.ast.expr.Expression)
    81:82:public void setElseExpr(japa.parser.ast.expr.Expression)
    85:86:public void setThenExpr(japa.parser.ast.expr.Expression)
japa.parser.ast.expr.DoubleLiteralExpr:
    36:37:public DoubleLiteralExpr(java.lang.String)
japa.parser.ast.expr.EnclosedExpr:
    37:39:public EnclosedExpr(japa.parser.ast.expr.Expression)
    61:62:public void setInner(japa.parser.ast.expr.Expression)
japa.parser.ast.expr.FieldAccessExpr:
    44:47:public FieldAccessExpr(japa.parser.ast.expr.Expression,java.lang.String)
    79:80:public void setField(java.lang.String)
    83:84:public void setScope(japa.parser.ast.expr.Expression)
    87:88:public void setTypeArgs(java.util.List)
japa.parser.ast.expr.InstanceOfExpr:
    40:43:public InstanceOfExpr(japa.parser.ast.expr.Expression,japa.parser.ast.type.Type)
    70:71:public void setExpr(japa.parser.ast.expr.Expression)
    74:75:public void setType(japa.parser.ast.type.Type)
japa.parser.ast.expr.IntegerLiteralExpr:
    private static final java.lang.String UNSIGNED_MIN_VALUE
    protected static final java.lang.String MIN_VALUE
japa.parser.ast.expr.LongLiteralExpr:
    private static final java.lang.String UNSIGNED_MIN_VALUE
    protected static final java.lang.String MIN_VALUE
japa.parser.ast.expr.MarkerAnnotationExpr:
    35:37:public MarkerAnnotationExpr(japa.parser.ast.expr.NameExpr)
japa.parser.ast.expr.MemberValuePair:
    40:43:public MemberValuePair(java.lang.String,japa.parser.ast.expr.Expression)
    70:71:public void setName(java.lang.String)
    74:75:public void setValue(japa.parser.ast.expr.Expression)
japa.parser.ast.expr.MethodCallExpr:
    46:49:public MethodCallExpr(japa.parser.ast.expr.Expression,java.lang.String)
    51:55:public MethodCallExpr(japa.parser.ast.expr.Expression,java.lang.String,java.util.List)
    92:93:public void setArgs(java.util.List)
    96:97:public void setName(java.lang.String)
    100:101:public void setScope(japa.parser.ast.expr.Expression)
    104:105:public void setTypeArgs(java.util.List)
japa.parser.ast.expr.NameExpr:
    37:39:public NameExpr(java.lang.String)
    61:62:public final void setName(java.lang.String)
japa.parser.ast.expr.NormalAnnotationExpr:
    39:42:public NormalAnnotationExpr(japa.parser.ast.expr.NameExpr,java.util.List)
    65:66:public void setPairs(java.util.List)
japa.parser.ast.expr.ObjectCreationExpr:
    50:54:public ObjectCreationExpr(japa.parser.ast.expr.Expression,japa.parser.ast.type.ClassOrInterfaceType,java.util.List)
    96:97:public void setAnonymousClassBody(java.util.List)
    100:101:public void setArgs(java.util.List)
    104:105:public void setScope(japa.parser.ast.expr.Expression)
    108:109:public void setType(japa.parser.ast.type.ClassOrInterfaceType)
    112:113:public void setTypeArgs(java.util.List)
japa.parser.ast.expr.QualifiedNameExpr:
    38:40:public QualifiedNameExpr(japa.parser.ast.expr.NameExpr,java.lang.String)
    62:63:public void setQualifier(japa.parser.ast.expr.NameExpr)
japa.parser.ast.expr.SingleMemberAnnotationExpr:
    37:40:public SingleMemberAnnotationExpr(japa.parser.ast.expr.NameExpr,japa.parser.ast.expr.Expression)
    63:64:public void setMemberValue(japa.parser.ast.expr.Expression)
japa.parser.ast.expr.StringLiteralExpr:
    61:62:public final void setValue(java.lang.String)
japa.parser.ast.expr.SuperExpr:
    37:39:public SuperExpr(japa.parser.ast.expr.Expression)
    61:62:public void setClassExpr(japa.parser.ast.expr.Expression)
japa.parser.ast.expr.ThisExpr:
    37:39:public ThisExpr(japa.parser.ast.expr.Expression)
    61:62:public void setClassExpr(japa.parser.ast.expr.Expression)
japa.parser.ast.expr.UnaryExpr:
    50:53:public UnaryExpr(japa.parser.ast.expr.Expression,japa.parser.ast.expr.UnaryExpr$Operator)
    80:81:public void setExpr(japa.parser.ast.expr.Expression)
    84:85:public void setOperator(japa.parser.ast.expr.UnaryExpr$Operator)
japa.parser.ast.expr.UnaryExpr$Operator:
    1:1:public static japa.parser.ast.expr.UnaryExpr$Operator valueOf(java.lang.String)
japa.parser.ast.expr.VariableDeclarationExpr:
    48:51:public VariableDeclarationExpr(japa.parser.ast.type.Type,java.util.List)
    53:57:public VariableDeclarationExpr(int,japa.parser.ast.type.Type,java.util.List)
    100:101:public void setAnnotations(java.util.List)
    104:105:public void setModifiers(int)
    108:109:public void setType(japa.parser.ast.type.Type)
    112:113:public void setVars(java.util.List)
japa.parser.ast.stmt.AssertStmt:
    40:42:public AssertStmt(japa.parser.ast.expr.Expression)
    44:47:public AssertStmt(japa.parser.ast.expr.Expression,japa.parser.ast.expr.Expression)
    74:75:public void setCheck(japa.parser.ast.expr.Expression)
    78:79:public void setMessage(japa.parser.ast.expr.Expression)
japa.parser.ast.stmt.BlockStmt:
    39:41:public BlockStmt(java.util.List)
    63:64:public void setStmts(java.util.List)
japa.parser.ast.stmt.BreakStmt:
    37:39:public BreakStmt(java.lang.String)
    61:62:public void setId(java.lang.String)
japa.parser.ast.stmt.CatchClause:
    41:44:public CatchClause(japa.parser.ast.body.Parameter,japa.parser.ast.stmt.BlockStmt)
    71:72:public void setCatchBlock(japa.parser.ast.stmt.BlockStmt)
    75:76:public void setExcept(japa.parser.ast.body.Parameter)
japa.parser.ast.stmt.ContinueStmt:
    37:39:public ContinueStmt(java.lang.String)
    61:62:public void setId(java.lang.String)
japa.parser.ast.stmt.DoStmt:
    40:43:public DoStmt(japa.parser.ast.stmt.Statement,japa.parser.ast.expr.Expression)
    70:71:public void setBody(japa.parser.ast.stmt.Statement)
    74:75:public void setCondition(japa.parser.ast.expr.Expression)
japa.parser.ast.stmt.ExplicitConstructorInvocationStmt:
    47:51:public ExplicitConstructorInvocationStmt(boolean,japa.parser.ast.expr.Expression,java.util.List)
    88:89:public void setArgs(java.util.List)
    92:93:public void setExpr(japa.parser.ast.expr.Expression)
    96:97:public void setThis(boolean)
    100:101:public void setTypeArgs(java.util.List)
japa.parser.ast.stmt.ExpressionStmt:
    38:40:public ExpressionStmt(japa.parser.ast.expr.Expression)
    62:63:public void setExpression(japa.parser.ast.expr.Expression)
japa.parser.ast.stmt.ForStmt:
    46:51:public ForStmt(java.util.List,japa.parser.ast.expr.Expression,java.util.List,japa.parser.ast.stmt.Statement)
    88:89:public void setBody(japa.parser.ast.stmt.Statement)
    92:93:public void setCompare(japa.parser.ast.expr.Expression)
    96:97:public void setInit(java.util.List)
    100:101:public void setUpdate(java.util.List)
japa.parser.ast.stmt.ForeachStmt:
    43:47:public ForeachStmt(japa.parser.ast.expr.VariableDeclarationExpr,japa.parser.ast.expr.Expression,japa.parser.ast.stmt.Statement)
    79:80:public void setBody(japa.parser.ast.stmt.Statement)
    83:84:public void setIterable(japa.parser.ast.expr.Expression)
    87:88:public void setVariable(japa.parser.ast.expr.VariableDeclarationExpr)
japa.parser.ast.stmt.IfStmt:
    42:46:public IfStmt(japa.parser.ast.expr.Expression,japa.parser.ast.stmt.Statement,japa.parser.ast.stmt.Statement)
    78:79:public void setCondition(japa.parser.ast.expr.Expression)
    82:83:public void setElseStmt(japa.parser.ast.stmt.Statement)
    86:87:public void setThenStmt(japa.parser.ast.stmt.Statement)
japa.parser.ast.stmt.LabeledStmt:
    39:42:public LabeledStmt(java.lang.String,japa.parser.ast.stmt.Statement)
    69:70:public void setLabel(java.lang.String)
    73:74:public void setStmt(japa.parser.ast.stmt.Statement)
japa.parser.ast.stmt.ReturnStmt:
    38:40:public ReturnStmt(japa.parser.ast.expr.Expression)
    62:63:public void setExpr(japa.parser.ast.expr.Expression)
japa.parser.ast.stmt.SwitchEntryStmt:
    42:45:public SwitchEntryStmt(japa.parser.ast.expr.Expression,java.util.List)
    72:73:public void setLabel(japa.parser.ast.expr.Expression)
    76:77:public void setStmts(java.util.List)
japa.parser.ast.stmt.SwitchStmt:
    42:45:public SwitchStmt(japa.parser.ast.expr.Expression,java.util.List)
    72:73:public void setEntries(java.util.List)
    76:77:public void setSelector(japa.parser.ast.expr.Expression)
japa.parser.ast.stmt.SynchronizedStmt:
    40:43:public SynchronizedStmt(japa.parser.ast.expr.Expression,japa.parser.ast.stmt.BlockStmt)
    70:71:public void setBlock(japa.parser.ast.stmt.BlockStmt)
    74:75:public void setExpr(japa.parser.ast.expr.Expression)
japa.parser.ast.stmt.ThrowStmt:
    38:40:public ThrowStmt(japa.parser.ast.expr.Expression)
    62:63:public void setExpr(japa.parser.ast.expr.Expression)
japa.parser.ast.stmt.TryStmt:
    43:47:public TryStmt(japa.parser.ast.stmt.BlockStmt,java.util.List,japa.parser.ast.stmt.BlockStmt)
    79:80:public void setCatchs(java.util.List)
    83:84:public void setFinallyBlock(japa.parser.ast.stmt.BlockStmt)
    87:88:public void setTryBlock(japa.parser.ast.stmt.BlockStmt)
japa.parser.ast.stmt.TypeDeclarationStmt:
    38:40:public TypeDeclarationStmt(japa.parser.ast.body.TypeDeclaration)
    62:63:public void setTypeDeclaration(japa.parser.ast.body.TypeDeclaration)
japa.parser.ast.stmt.WhileStmt:
    40:43:public WhileStmt(japa.parser.ast.expr.Expression,japa.parser.ast.stmt.Statement)
    70:71:public void setBody(japa.parser.ast.stmt.Statement)
    74:75:public void setCondition(japa.parser.ast.expr.Expression)
japa.parser.ast.type.ClassOrInterfaceType:
    43:45:public ClassOrInterfaceType(java.lang.String)
    47:50:public ClassOrInterfaceType(japa.parser.ast.type.ClassOrInterfaceType,java.lang.String)
    82:83:public void setName(java.lang.String)
    86:87:public void setScope(japa.parser.ast.type.ClassOrInterfaceType)
    90:91:public void setTypeArgs(java.util.List)
japa.parser.ast.type.PrimitiveType:
    41:43:public PrimitiveType(japa.parser.ast.type.PrimitiveType$Primitive)
    65:66:public void setType(japa.parser.ast.type.PrimitiveType$Primitive)
japa.parser.ast.type.PrimitiveType$Primitive:
    1:1:public static japa.parser.ast.type.PrimitiveType$Primitive valueOf(java.lang.String)
japa.parser.ast.type.ReferenceType:
    39:41:public ReferenceType(japa.parser.ast.type.Type)
    43:46:public ReferenceType(japa.parser.ast.type.Type,int)
    73:74:public void setArrayCount(int)
    77:78:public void setType(japa.parser.ast.type.Type)
japa.parser.ast.type.WildcardType:
    39:41:public WildcardType(japa.parser.ast.type.ReferenceType)
    43:46:public WildcardType(japa.parser.ast.type.ReferenceType,japa.parser.ast.type.ReferenceType)
    73:74:public void setExtends(japa.parser.ast.type.ReferenceType)
    77:78:public void setSuper(japa.parser.ast.type.ReferenceType)
japa.parser.ast.visitor.GenericVisitorAdapter
japa.parser.ast.visitor.ModifierVisitorAdapter
japa.parser.ast.visitor.VoidVisitorAdapter
